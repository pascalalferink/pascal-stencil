.pascal-row {
    margin-right: auto;
    margin-left: auto;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    margin-right: -1rem;
    margin-left: -1rem;
  }

  .pascal-col {
    padding-right: 1rem;
    padding-left: 1rem;
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }

  $columCount: 12;

  @mixin gridItem($columWidth) {
    -ms-flex: 0 0 $columWidth;
    flex: 0 0 $columWidth;
    max-width: $columWidth;
  }

  @for $i from 1 through $columCount {
    .pascal-col-#{$i} {
      $columWidth: ($i/$columCount) * 100%;
      @include gridItem($columWidth);
    }
  }

  @media print, screen and (min-width: 40em) {
    @for $i from 1 through $columCount {
      $columWidth: ($i/$columCount) * 100%;
      .pascal-col-sm-#{$i} {
        @include gridItem($columWidth);
      }
      .pascal-col-sm-offset-#{$i} {
        margin-left: $columWidth;
      }
    }
  }
  @media print, screen and (min-width: 48em) {
    @for $i from 1 through $columCount {
      $columWidth: ($i/$columCount) * 100%;
      .pascal-col-md-#{$i} {
        @include gridItem($columWidth);
      }
      .pascal-col-md-offset-#{$i} {
        margin-left: $columWidth;
      }
    }
  }
  @media print, screen and (min-width: 64em) {
    @for $i from 1 through $columCount {
      $columWidth: ($i/$columCount) * 100%;
      .pascal-col-lg-#{$i} {
        @include gridItem($columWidth);
      }
      .pascal-col-lg-offset-#{$i} {
        margin-left: $columWidth;
      }
    }
  }

  @media screen and (min-width: 75em) {
    @for $i from 1 through $columCount {
      $columWidth: ($i/$columCount) * 100%;
      .pascal-col-xl-#{$i} {
        @include gridItem($columWidth);
      }
      .pascal-col-xl-offset-#{$i} {
        margin-left: $columWidth;
      }
    }
  }
